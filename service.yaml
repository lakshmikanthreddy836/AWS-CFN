{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The template used to create an ECS Service from the ECS Console.",
  "Parameters": {
    "ECSClusterName": {
      "Type": "String",
      "Default": "Maaruji-ECS-Dev",
      "Description": "The name of the ECS cluster."
    },
    "ECSServiceName": {
      "Type": "String",
      "Default": "cronberry-test1",
      "Description": "The name of the ECS service."
    },
    "SecurityGroupIDs": {
      "Type": "CommaDelimitedList",
      "Default": "sg-00e8eb856cfbdc6e8",
      "Description": "The security group IDs."
    },
    "SubnetIDs": {
      "Type": "CommaDelimitedList",
      "Default": "",
      "Description": "The subnet IDs."
    },
    "VpcID": {
      "Type": "String",
      "Default": "vpc-064c7cfa2987dcf8f",
      "Description": "The VPC ID."
    },
    "LoadBalancerName": {
      "Type": "String",
      "Default": "maaaruji-dev-alb",
      "Description": "The name of the load balancer."
    }
  },
  "Resources": {
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": { "Ref": "ECSClusterName" },
        "TaskDefinition": "arn:aws:ecs:ap-south-1:851725466453:task-definition/cornberry-test:2",
        "LaunchType": "EC2",
        "ServiceName": { "Ref": "ECSServiceName" },
        "SchedulingStrategy": "REPLICA",
        "DesiredCount": 1,
        "LoadBalancers": [
          {
            "ContainerName": "cronberry-test",
            "ContainerPort": 8080,
            "LoadBalancerName": { "Ref": "AWS::NoValue" },
            "TargetGroupArn": { "Ref": "TargetGroup" }
          }
        ],
        "HealthCheckGracePeriodSeconds": "120",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100,
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": true
          }
        },
        "DeploymentController": {
          "Type": "ECS"
        },
        "ServiceConnectConfiguration": {
          "Enabled": false
        },
        "PlacementStrategies": [
          {
            "Field": "attribute:ecs.availability-zone",
            "Type": "spread"
          },
          {
            "Field": "instanceId",
            "Type": "spread"
          }
        ],
        "PlacementConstraints": [],
        "Tags": [],
        "EnableECSManagedTags": true
      },
      "DependsOn": [
        "ListenerRule"
      ]
    },
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/cronberry/api/user/fetch-user-profile",
        "Name": "ecs-Maaruj-cronberry-test1",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "HealthCheckProtocol": "HTTP",
        "VpcId": "vpc-0d5891e0deef37a1c",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "300"
          }
        ]
      }
    },
    "ListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": { "Ref": "TargetGroup" }
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/cronberry-test*"
            ]
          }
        ],
        "ListenerArn": "arn:aws:elasticloadbalancing:ap-south-1:851725466453:listener/app/maaaruji-dev-alb/2df5fa3726ca213f/900ced3d4766a55b",
        "Priority": "1"
      }
    }
  },
  "Outputs": {
    "ClusterName": {
      "Description": "The cluster used to create the service.",
      "Value": { "Ref": "ECSClusterName" }
    },
    "ECSService": {
      "Description": "The created service.",
      "Value": { "Ref": "ECSService" }
    },
    "TargetGroup": {
      "Description": "The created target group.",
      "Value": { "Ref": "TargetGroup" }
    },
    "ListenerRule": {
      "Description": "The created listener rule.",
      "Value": { "Ref": "ListenerRule" }
    }
  }
}